<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Project Atomic</title>
  <subtitle>Tag: Automation</subtitle>
  <id>http://www.projectatomic.io/blog/</id>
  <link href="http://www.projectatomic.io/blog/"/>
  <link href="http://www.projectatomic.io/blog/tag/automation.xml" rel="self"/>
  <updated>2019-11-21T00:00:00+00:00</updated>
  <author>
    <name>Project Atomic. Sponsored by Red Hat, Inc.</name>
  </author>
  <entry>
    <title>Automate Building Atomic Host</title>
    <link rel="alternate" href="http://www.projectatomic.io/blog/2017/02/automate-building-atomic-host/"/>
    <id>http://www.projectatomic.io/blog/2017/02/automate-building-atomic-host/</id>
    <published>2017-02-27T18:00:00+00:00</published>
    <updated>2021-10-07T14:03:16+00:00</updated>
    <author>
      <name>Trishna Guha</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://www.projectatomic.io/"&gt;Project Atomic&lt;/a&gt; hosts are built from standard RPM packages that have been composed into filesystem trees using rpm-ostree. This guide provides an example of automating building and testing new Atomic Host ostrees.&lt;/p&gt;

&lt;p&gt;One of the primary benefits to Atomic Host and OSTree has been the ability to &lt;q&gt;configure once, deploy many times&lt;/q&gt; using custom OSTree images. But the process for doing so wasn&amp;rsquo;t streamlined or well-documented. I&amp;rsquo;m helping change that. I&amp;rsquo;m going to describe how to build atomic host in automated way. At the end of the article you&amp;rsquo;ll be able to create VM from QCOW2 image which is going to boot your own OSTree.  The VM can also be used for testing Atomic Host releases (please feel free to &lt;a href="https://pagure.io/atomic-wg/issues"&gt;open an issue if you find anything&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The procedure and Ansible playbook below will enable you to create your own Atomic Host OSTree image. This is the first step in creating your own &lt;q&gt;distributions&lt;/q&gt; of Atomic Host to install on your cloud servers. Note that it will install a bunch of requirements on your local server, as well as using system resources heavily. As such, you may want to run it on a development machine instead of your personal laptop.&lt;/p&gt;

&lt;p&gt;If you just want to compose an ostree, and don&amp;rsquo;t need the playbook automation or testing, see &lt;a href="http://www.projectatomic.io/docs/compose-your-own-tree/"&gt;the documentation for composing ostrees&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Requirements&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fedora Atomic QCOW2 Image. The image can be downloaded from here: &lt;a href="https://getfedora.org/en/atomic/download/"&gt;Fedora-Atomic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make sure that Ansible is installed on your system. Note that I am installing it on my &lt;a href="https://getfedora.org/en/workstation/download"&gt;Fedora-Workstation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo dnf install ansible python2-dnf
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Process&lt;/h4&gt;

&lt;p&gt;Clone the &lt;a href="https://github.com/trishnaguha/build-atomic-host/"&gt;Build-Atomic-Host&lt;/a&gt; git repo on your working machine/&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone https://github.com/trishnaguha/build-atomic-host.git
$ cd build-atomic-host
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Create VM from the QCOW2 Image&lt;/h4&gt;

&lt;p&gt;The following creates a VM from QCOW2 Image where the username is &lt;code&gt;atomic-user&lt;/code&gt; and password is &lt;code&gt;atomic&lt;/code&gt;.
Here &lt;code&gt;atomic-node&lt;/code&gt; is the instance name.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo sh create-vm.sh atomic-node /path/to/fedora-atomic25.qcow2
# For example: /var/lib/libvirt/images/Fedora-Atomic-25-20170131.0.x86_64.qcow2
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Install Requirements and Start the HTTP Server&lt;/h4&gt;

&lt;p&gt;The custom ostree is made available via a simple web server. The following playbook installs requirements, creates directory structure, initializes the OSTree repository and starts the HTTP server on TCP Port 35000.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ansible-playbook setup.yml --ask-sudo-pass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use &lt;code&gt;ip addr&lt;/code&gt; to check for the IP Address of the HTTP server.  This needs to be the interface by which your workstations communicates with virtual machines running on it, such as &lt;q&gt;virbr0&lt;/q&gt; for LibVirt on Linux:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ip addr
7: virbr0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP group default qlen 1000
    link/ether 52:54:00:37:7f:e9 brd ff:ff:ff:ff:ff:ff
    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In our example, the IP Address of the running HTTP server is &lt;code&gt;192.168.122.1&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;Give the ostree a name and add HTTP Server IP Address&lt;/h4&gt;

&lt;p&gt;Replace the variables given in &lt;a href="https://github.com/trishnaguha/build-atomic-host/tree/master/vars/atomic.yml"&gt;vars/atomic.yml&lt;/a&gt; with your choice of ostree name and the HTTP server IP address.
For Instance:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Variables for Atomic host
atomicname: my-atomic
httpserver: 192.168.122.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here &lt;code&gt;my-atomic&lt;/code&gt; is the ostree name and &lt;code&gt;192.168.122.1&lt;/code&gt; is HTTP Server IP Address.&lt;/p&gt;

&lt;h4&gt;Run All-in-one Playbook&lt;/h4&gt;

&lt;p&gt;The following playbook composes the ostree, performs SSH-setup and rebases on the created tree:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ansible-playbook main.yml --ask-sudo-pass
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Check IP Address of the Atomic instance&lt;/h4&gt;

&lt;p&gt;The following command returns the IP Address of the running Atomic instance:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo virsh domifaddr atomic-node
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Reboot&lt;/h4&gt;

&lt;p&gt;Now SSH to the Atomic Host and reboot it so that it can reboot into the created ostree:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh atomic-user@&amp;lt;atomic-hostIP&amp;gt;
$ sudo systemctl reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wait for few minutes after the reboot so that you do not get connection refused by the host while SSH-ing.&lt;/p&gt;

&lt;h4&gt;Verify: SSH to the Atomic Host&lt;/h4&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ssh atomic-user@192.168.122.221
[atomic-user@atomic-node ~]$ sudo rpm-ostree status
State: idle
Deployments:
‚óè my-atomic:fedora-atomic/25/x86_64/docker-host
       Version: 25.1 (2017-02-07 05:34:46)
        Commit: 15b70198b8ec7fd54271f9672578544ff03d1f61df8d7f0fa262ff7519438eb6
        OSName: fedora-atomic

  fedora-atomic:fedora-atomic/25/x86_64/docker-host
       Version: 25.51 (2017-01-30 20:09:59)
        Commit: f294635a1dc62d9ae52151a5fa897085cac8eaa601c52e9a4bc376e9ecee11dd
        OSName: fedora-atomic
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you have the updated tree and can test it in the VM.&lt;/p&gt;

&lt;p&gt;If you are interested in composing your own tree that includes addition or deletion of packages of your choice, please follow &lt;a href="http://www.projectatomic.io/docs/compose-your-own-tree/"&gt;Compose-your-own-tree&lt;/a&gt; by &lt;a href="https://twitter.com/jasonbrooks"&gt;Jason Brooks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Shout-Out for the following folks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gbraad.nl"&gt;Gerard Braad&lt;/a&gt; who mentored me for the project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlebon"&gt;Jonathan Lebon&lt;/a&gt; who demonstrated Building Atomic host workshop in &lt;a href="https://devconf.cz/"&gt;DevConf.CZ&lt;/a&gt;, 2017 at Brno. His slides are here: &lt;a href="http://jlebon.com/devconf/slides.pdf"&gt;jlebon-devconf-slides&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>

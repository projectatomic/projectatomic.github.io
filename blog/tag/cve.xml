<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Project Atomic</title>
  <subtitle>Tag: Cve</subtitle>
  <id>http://www.projectatomic.io/blog/</id>
  <link href="http://www.projectatomic.io/blog/"/>
  <link href="http://www.projectatomic.io/blog/tag/cve.xml" rel="self"/>
  <updated>2019-11-21T00:00:00+00:00</updated>
  <author>
    <name>Project Atomic. Sponsored by Red Hat, Inc.</name>
  </author>
  <entry>
    <title>Why Red Hat is Shipping Docker 1.6</title>
    <link rel="alternate" href="http://www.projectatomic.io/blog/2015/05/why-red-hat-is-shipping-docker-1-6/"/>
    <id>http://www.projectatomic.io/blog/2015/05/why-red-hat-is-shipping-docker-1-6/</id>
    <published>2015-05-20T20:24:04+00:00</published>
    <updated>2021-10-07T14:03:16+00:00</updated>
    <author>
      <name>Dan Walsh</name>
    </author>
    <content type="html">&lt;p&gt;We attempt to ship new versions of Red Hat Enteprise Linux Atomic Host (RHELAH) every six weeks. I am in charge of the Docker portion of each release. I also lead the team developing the &lt;a href="http://www.projectatomic.io/docs/usr-bin-atomic/"&gt;atomic&lt;/a&gt; command. As a major component of the RHELAH release, we want to include the most recent Docker release possible to our users. &lt;/p&gt;

&lt;p&gt;However, just because Docker releases a new version does not mean this instantly gets into the RHEL release. We need to allow our QE team time for testing, and to make sure it is &lt;q&gt;Enterprise Ready.&lt;/q&gt;  Towards the end of the most recent six week period Docker released an updated Docker 1.6.1 package with a series of &lt;a href="http://www.openwall.com/lists/oss-security/2015/05/07/10"&gt;CVEs&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Naturally, Red Hat&amp;rsquo;s Security Response Team (SRT) analysed these CVEs to see if we needed to hold up the release to include Docker 1.6.1. After careful analysis, SRT decided that the potential threat posed by these CVEs was &lt;em&gt;not&lt;/em&gt; a real risk to users who deploy containers responsibly.&lt;/p&gt;

&lt;p&gt;Trevor Jay, from Red Hat Security, states:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Technically speaking, these don&amp;rsquo;t cross any trust boundaries. Docker images are root-run software. They can drop or restrict permissions and capabilities so that you&amp;rsquo;re protected should they become compromised just like any other software that starts with elevated privileges, but you are inherently trusting the image itself to be well-written (to take advantage of the safeties we provide) and non-malicious.&lt;/p&gt;

&lt;p&gt;This is all about trusting the application you install on your system. Sometimes I worry people have the opinion that any piece of software I install, as long as it is in a container I am safe.  I believe Docker is playing whack a mole with these vulnerabilities and preventing this is going to be near impossible.&lt;/p&gt;

&lt;p&gt;Container safety is about restricting what can happen when your application gets owned, not about randomly running potential malware.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Verify, then Trust&lt;/h3&gt;

&lt;p&gt;I don&amp;rsquo;t want to sound like a broken record, but &lt;a href="http://www.projectatomic.io/blog/2014/11/docker-s-new-security-advisories-and-untrusted-images"&gt;I&amp;rsquo;ve covered this before&lt;/a&gt;. The problem isn&amp;rsquo;t the privilege escalation, it&amp;rsquo;s that users are running untrusted images and expecting Docker to protect them against potentially malicious software.&lt;/p&gt;

&lt;p&gt;Docker shouldn&amp;rsquo;t be about running random crap from the Internet (as root, no less!) and expecting not to be hacked. &lt;/p&gt;

&lt;p&gt;Make no mistake, we will do everything we can to have a timely (but tested) asynchronous release when we identify real security vulnerabilities in the software we ship. These &lt;q&gt;vulnerabilities,&lt;/q&gt; however, are easily prevented by sane computing practices.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Docker's New Security Advisories and Untrusted Images</title>
    <link rel="alternate" href="http://www.projectatomic.io/blog/2014/11/docker-s-new-security-advisories-and-untrusted-images/"/>
    <id>http://www.projectatomic.io/blog/2014/11/docker-s-new-security-advisories-and-untrusted-images/</id>
    <published>2014-11-25T21:50:00+00:00</published>
    <updated>2021-10-07T14:03:16+00:00</updated>
    <author>
      <name>Dan Walsh</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/images/dan-yawning.jpg"&gt; Docker has released two CVEs with the newest version (docker-1.3.2) regarding two privilege escalation flaws. They are only an issue when running untrusted images.&lt;/p&gt;

&lt;h3&gt;Yawn!!!&lt;/h3&gt;

&lt;p&gt;I question whether they should be CVE&amp;rsquo;s at all. People need to realize that installing a Docker image is the equivalent of installing an RPM or a Debian .deb package. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you install an RPM or Debian package from an untrusted source on your machine, then you should expect your machine will get owned.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;If you install a Docker image from an untrusted source on your machine, then you should expect your machine will get owned.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That lesson has to be painfully learned, at first. For most users, it&amp;rsquo;s not obvious that &lt;code&gt;docker pull&lt;/code&gt; is in the same class as &lt;code&gt;yum install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;My fear with these CVEs is that people will start to assume Docker is unsafe or full of vulnerabilties. Check out &lt;a href="http://www.theregister.co.uk/2014/11/25/docker_vulnerabilities/"&gt;this article&lt;/a&gt; on The Register, for example.&lt;/p&gt;

&lt;p&gt;Docker has to spend time working on fixing the vulnerabilities, and people will get the false sense of security that docker can install untrusted images securely. Of course as soon as a user starts a container on the untrusted image, who knows what is going to happen? If the container runs any code as root, your machine can be owned. Remember, &lt;a href="http://opensource.com/business/14/7/docker-security-selinux"&gt;containers &lt;em&gt;do not&lt;/em&gt; contain&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;It&amp;rsquo;s All About Trust&lt;/h3&gt;

&lt;p&gt;The bottom line here? Do not run untrusted Docker images. Treat a Docker image the same way you would treat other software you install on your machine. It should be from a source you trust. You should not blindly install software from a third party just to get the latest version of a project or to save a little time. &lt;/p&gt;

&lt;p&gt;To address this, &lt;a href="http://www.redhat.com/en/about/press-releases/red-hat-announces-certification-for-containerized-applications-extends-customer-confidence-and-trust-to-the-cloud"&gt;Red Hat is building a certification process for Docker images&lt;/a&gt;, similar to what we do for third party software.&lt;/p&gt;

&lt;p&gt;For folks who are using Fedora or CentOS, make sure that you&amp;rsquo;re getting your images from the official Fedora and CentOS Docker repositories or from repositories you trust &amp;ndash; if you&amp;rsquo;re using one of the many third-party images, you don&amp;rsquo;t have a good way to confirm the origin of the software. Whether you&amp;rsquo;re running Docker 1.3.2 or 1.0, untrusted containers are unsafe, period.&lt;/p&gt;
</content>
  </entry>
</feed>

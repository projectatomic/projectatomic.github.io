<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Project Atomic</title>
  <subtitle>Tag: Journald</subtitle>
  <id>http://www.projectatomic.io/blog/</id>
  <link href="http://www.projectatomic.io/blog/"/>
  <link href="http://www.projectatomic.io/blog/tag/journald.xml" rel="self"/>
  <updated>2019-11-21T00:00:00+00:00</updated>
  <author>
    <name>Project Atomic. Sponsored by Red Hat, Inc.</name>
  </author>
  <entry>
    <title>Logging Docker Container Output to journald</title>
    <link rel="alternate" href="http://www.projectatomic.io/blog/2015/04/logging-docker-container-output-to-journald/"/>
    <id>http://www.projectatomic.io/blog/2015/04/logging-docker-container-output-to-journald/</id>
    <published>2015-04-28T17:26:27+00:00</published>
    <updated>2021-10-07T14:03:16+00:00</updated>
    <author>
      <name>Dan Walsh</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; has added a new feature to allow alternate logging drivers, and soon you&amp;rsquo;ll be able to use &lt;code&gt;journald&lt;/code&gt; as a supported driver.&lt;/p&gt;

&lt;p&gt;With Docker 1.6 they support json-file, which is the old default, syslog, or no logging at all.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;If you ran your docker daemon with the &lt;code&gt;--log-driver=syslog&lt;/code&gt; option, any output from a container would go directly to system syslog daemon, and usually end up in /var/log/messages.&lt;/p&gt;

&lt;p&gt;I added a patch to support journald as a logging driver, and it was &lt;a href="https://github.com/docker/docker/pull/12557"&gt;recently merged&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;In docker-1.7 you will have the option to use &lt;code&gt;--log-driver=journald&lt;/code&gt; on either your docker daemon to cause all of your container logging to go directly to the journal, or you could use the &amp;ndash;log-driver=journald on a docker run/create line, so you could get individual containers running with different logging drivers.&lt;/p&gt;

&lt;p&gt;To test this I set up my docker daemon to run with the following options.  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker -d --selinux-enabled --log-driver=journald&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now I run a simple container.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run fedora echo &amp;quot;Dan Walsh was here&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then I look up the container ID for the newly created container, and I can use journalctl to examine the content.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;journalctl MESSAGE_ID=cdf02c627e27
-- Logs begin at Mon 2015-04-06 16:06:42 EDT, end at Fri 2015-04-24 08:40:38 EDT. --
Apr 20 15:06:39 dhcp-10-19-62-196.boston.devel.redhat.com docker[27792]: Dan Walsh was here
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Currently the &lt;code&gt;docker logs&lt;/code&gt; command only works with the json-file backend. But I hope to eventually get the docker daemon to communicate with the journald to get this information. Of course if anyone wants to take a stab at this, we would welcome your effort.&lt;/p&gt;

&lt;p&gt;As mentioned, the journald backend for &lt;code&gt;--log-driver&lt;/code&gt; is not shipping in Docker today, but should be available in the 1.7 release. Keep reading here or follow &lt;a href="https://twitter.com/projectatomic"&gt;@projectatomic&lt;/a&gt; for updates on new and interesting features in Docker.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Running Syslog Within a Docker Container</title>
    <link rel="alternate" href="http://www.projectatomic.io/blog/2014/09/running-syslog-within-a-docker-container/"/>
    <id>http://www.projectatomic.io/blog/2014/09/running-syslog-within-a-docker-container/</id>
    <published>2014-09-11T20:06:00+00:00</published>
    <updated>2021-10-07T14:03:16+00:00</updated>
    <author>
      <name>Dan Walsh</name>
    </author>
    <content type="html">&lt;p&gt;Recently I received a &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1139734"&gt;bug report&lt;/a&gt; on Docker complaining about using rsyslogd within a container.  &lt;/p&gt;

&lt;p&gt;The user ran a RHEL7 container, installed rsyslog, started the daemon, and then sent a logger message, and nothing happened.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# docker run -it --rm rhel /bin/bash
# yum -y install rsyslog
# /usr/sbin/rsyslogd
# logger "this is a test"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No message showed up in &lt;code&gt;/var/log/messages&lt;/code&gt; within the container, or on the host machine for that matter.&lt;/p&gt;

&lt;p&gt;The user then looked and noticed that &lt;code&gt;/dev/log&lt;/code&gt; did not exist and this was where logger was writing the message. The user thought this was a bug.&lt;/p&gt;

&lt;p&gt;The problem was that in RHEL7 and Fedora we now use journald, which listens on &lt;code&gt;/dev/log&lt;/code&gt; for incoming messages. In RHEL7 and Fedora, rsyslog actually reads messages from the journal via its API by default.&lt;/p&gt;

&lt;p&gt;But not all docker containers run systemd and journald. (Most don&amp;rsquo;t). In order to get the rsyslogd to work the way the user wanted, he would have to modify the configuration file, &lt;code&gt;/etc/rsyslogd.conf&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; remove &lt;code&gt;$ModLoad imjournal&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;$OmitLocalLogging&lt;/code&gt; to &lt;code&gt;off&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make sure &lt;code&gt;$ModLoad imuxsock&lt;/code&gt; is present.&lt;/li&gt;
&lt;li&gt;Also comment out: &lt;code&gt;$IMJournalStateFile imjournal.state&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After making these changes rsyslogd will start listening on &lt;code&gt;/dev/log&lt;/code&gt; within the container and the logger messages will get accepted by rsyslogd and written to &lt;code&gt;/var/log/messages&lt;/code&gt; within the container.&lt;/p&gt;

&lt;p&gt;If you wanted to logging messages to go to the host logger, you could &lt;q&gt;volume&lt;/q&gt; mount &lt;code&gt;/dev/log&lt;/code&gt; into the container.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# docker run -v /dev/log:/dev/log -it --rm rhel /bin/bash
# logger "this is a test"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The message should show up in the host&amp;rsquo;s journalct log, and if you are running rsyslog on the host, the message should end up in &lt;code&gt;/var/log/messages&lt;/code&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
